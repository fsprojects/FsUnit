[{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit.html","title":"FsUnit","content":"Common \nCustomConstraints \nTopLevelOperators \nAssert \nEquality\u003C\u0027T\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped.html","title":"FsUnitTyped","content":"TopLevelOperators","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-common.html","title":"Common","content":"Common \n \nCommon.isUnionCase \nisUnionCase \nCommon.caseName \ncaseName \nCommon.isOfCase \nisOfCase","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-common.html#isUnionCase","title":"Common.isUnionCase","content":"Common.isUnionCase \nisUnionCase \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-common.html#caseName","title":"Common.caseName","content":"Common.caseName \ncaseName \n Takes an expression and returns the name of the union cases that are the result of this expression.\n Note, not all ways an expression may result in an union case are covered in this function.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-common.html#isOfCase","title":"Common.isOfCase","content":"Common.isOfCase \nisOfCase \n\n Checks whether the given value is of the same case of a union type as the\n case defined by the given expression.\n  \nNote, not all ways an expression may result in an union case are covered in this function.","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-customconstraints.html","title":"CustomConstraints","content":"CustomConstraints \n \nCustomConstraints.OfSameCaseConstraint \nOfSameCaseConstraint","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-customconstraints-ofsamecaseconstraint.html","title":"OfSameCaseConstraint","content":"OfSameCaseConstraint \n \nOfSameCaseConstraint.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nOfSameCaseConstraint.Expected \nExpected","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-customconstraints-ofsamecaseconstraint.html#\u0060\u0060.ctor\u0060\u0060","title":"OfSameCaseConstraint.\u0060\u0060.ctor\u0060\u0060","content":"OfSameCaseConstraint.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-customconstraints-ofsamecaseconstraint.html#Expected","title":"OfSameCaseConstraint.Expected","content":"OfSameCaseConstraint.Expected \nExpected \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html","title":"TopLevelOperators","content":"TopLevelOperators \n \nTopLevelOperators.FSharpCustomMessageFormatter \nFSharpCustomMessageFormatter \nTopLevelOperators.Null \nNull \nTopLevelOperators.Empty \nEmpty \nTopLevelOperators.EmptyString \nEmptyString \nTopLevelOperators.NullOrEmptyString \nNullOrEmptyString \nTopLevelOperators.True \nTrue \nTopLevelOperators.False \nFalse \nTopLevelOperators.NaN \nNaN \nTopLevelOperators.unique \nunique \nTopLevelOperators.should \nshould \nTopLevelOperators.equal \nequal \nTopLevelOperators.equalSeq \nequalSeq \nTopLevelOperators.equivalent \nequivalent \nTopLevelOperators.equalWithin \nequalWithin \nTopLevelOperators.contain \ncontain \nTopLevelOperators.haveLength \nhaveLength \nTopLevelOperators.haveCount \nhaveCount \nTopLevelOperators.be \nbe \nTopLevelOperators.sameAs \nsameAs \nTopLevelOperators.throw \nthrow \nTopLevelOperators.throwWithMessage \nthrowWithMessage \nTopLevelOperators.greaterThan \ngreaterThan \nTopLevelOperators.greaterThanOrEqualTo \ngreaterThanOrEqualTo \nTopLevelOperators.lessThan \nlessThan \nTopLevelOperators.lessThanOrEqualTo \nlessThanOrEqualTo \nTopLevelOperators.shouldFail \nshouldFail \nTopLevelOperators.endWith \nendWith \nTopLevelOperators.startWith \nstartWith \nTopLevelOperators.haveSubstring \nhaveSubstring \nTopLevelOperators.ofExactType \nofExactType \nTopLevelOperators.instanceOfType \ninstanceOfType \nTopLevelOperators.ascending \nascending \nTopLevelOperators.descending \ndescending \nTopLevelOperators.not\u0027 \nnot\u0027 \nTopLevelOperators.inRange \ninRange \nTopLevelOperators.ofCase \nofCase \nTopLevelOperators.supersetOf \nsupersetOf \nTopLevelOperators.subsetOf \nsubsetOf","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#Null","title":"TopLevelOperators.Null","content":"TopLevelOperators.Null \nNull \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#Empty","title":"TopLevelOperators.Empty","content":"TopLevelOperators.Empty \nEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#EmptyString","title":"TopLevelOperators.EmptyString","content":"TopLevelOperators.EmptyString \nEmptyString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#NullOrEmptyString","title":"TopLevelOperators.NullOrEmptyString","content":"TopLevelOperators.NullOrEmptyString \nNullOrEmptyString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#True","title":"TopLevelOperators.True","content":"TopLevelOperators.True \nTrue \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#False","title":"TopLevelOperators.False","content":"TopLevelOperators.False \nFalse \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#NaN","title":"TopLevelOperators.NaN","content":"TopLevelOperators.NaN \nNaN \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#unique","title":"TopLevelOperators.unique","content":"TopLevelOperators.unique \nunique \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#should","title":"TopLevelOperators.should","content":"TopLevelOperators.should \nshould \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#equal","title":"TopLevelOperators.equal","content":"TopLevelOperators.equal \nequal \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#equalSeq","title":"TopLevelOperators.equalSeq","content":"TopLevelOperators.equalSeq \nequalSeq \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#equivalent","title":"TopLevelOperators.equivalent","content":"TopLevelOperators.equivalent \nequivalent \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#equalWithin","title":"TopLevelOperators.equalWithin","content":"TopLevelOperators.equalWithin \nequalWithin \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#contain","title":"TopLevelOperators.contain","content":"TopLevelOperators.contain \ncontain \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#haveLength","title":"TopLevelOperators.haveLength","content":"TopLevelOperators.haveLength \nhaveLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#haveCount","title":"TopLevelOperators.haveCount","content":"TopLevelOperators.haveCount \nhaveCount \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#be","title":"TopLevelOperators.be","content":"TopLevelOperators.be \nbe \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#sameAs","title":"TopLevelOperators.sameAs","content":"TopLevelOperators.sameAs \nsameAs \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#throw","title":"TopLevelOperators.throw","content":"TopLevelOperators.throw \nthrow \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#throwWithMessage","title":"TopLevelOperators.throwWithMessage","content":"TopLevelOperators.throwWithMessage \nthrowWithMessage \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#greaterThan","title":"TopLevelOperators.greaterThan","content":"TopLevelOperators.greaterThan \ngreaterThan \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#greaterThanOrEqualTo","title":"TopLevelOperators.greaterThanOrEqualTo","content":"TopLevelOperators.greaterThanOrEqualTo \ngreaterThanOrEqualTo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#lessThan","title":"TopLevelOperators.lessThan","content":"TopLevelOperators.lessThan \nlessThan \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#lessThanOrEqualTo","title":"TopLevelOperators.lessThanOrEqualTo","content":"TopLevelOperators.lessThanOrEqualTo \nlessThanOrEqualTo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#shouldFail","title":"TopLevelOperators.shouldFail","content":"TopLevelOperators.shouldFail \nshouldFail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#endWith","title":"TopLevelOperators.endWith","content":"TopLevelOperators.endWith \nendWith \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#startWith","title":"TopLevelOperators.startWith","content":"TopLevelOperators.startWith \nstartWith \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#haveSubstring","title":"TopLevelOperators.haveSubstring","content":"TopLevelOperators.haveSubstring \nhaveSubstring \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#ofExactType","title":"TopLevelOperators.ofExactType","content":"TopLevelOperators.ofExactType \nofExactType \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#instanceOfType","title":"TopLevelOperators.instanceOfType","content":"TopLevelOperators.instanceOfType \ninstanceOfType \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#ascending","title":"TopLevelOperators.ascending","content":"TopLevelOperators.ascending \nascending \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#descending","title":"TopLevelOperators.descending","content":"TopLevelOperators.descending \ndescending \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#not\u0027","title":"TopLevelOperators.not\u0027","content":"TopLevelOperators.not\u0027 \nnot\u0027 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#inRange","title":"TopLevelOperators.inRange","content":"TopLevelOperators.inRange \ninRange \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#ofCase","title":"TopLevelOperators.ofCase","content":"TopLevelOperators.ofCase \nofCase \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#supersetOf","title":"TopLevelOperators.supersetOf","content":"TopLevelOperators.supersetOf \nsupersetOf \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators.html#subsetOf","title":"TopLevelOperators.subsetOf","content":"TopLevelOperators.subsetOf \nsubsetOf \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators-fsharpcustommessageformatter.html","title":"FSharpCustomMessageFormatter","content":"FSharpCustomMessageFormatter \n \nFSharpCustomMessageFormatter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-topleveloperators-fsharpcustommessageformatter.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpCustomMessageFormatter.\u0060\u0060.ctor\u0060\u0060","content":"FSharpCustomMessageFormatter.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html","title":"Assert","content":"Assert \n Generic test assertions. \nAssert.AreEqual \nAreEqual \nAssert.AreEqual \nAreEqual \nAssert.AreEqual \nAreEqual \nAssert.AreNotEqual \nAreNotEqual \nAssert.AreNotEqual \nAreNotEqual \nAssert.AreNotEqual \nAreNotEqual \nAssert.AreNotSame \nAreNotSame \nAssert.AreNotSame \nAreNotSame \nAssert.AreNotSame \nAreNotSame \nAssert.AreSame \nAreSame \nAssert.AreSame \nAreSame \nAssert.AreSame \nAreSame \nAssert.Contains \nContains \nAssert.Contains \nContains \nAssert.Contains \nContains \nAssert.Greater \nGreater \nAssert.Greater \nGreater \nAssert.Greater \nGreater \nAssert.GreaterOrEqual \nGreaterOrEqual \nAssert.GreaterOrEqual \nGreaterOrEqual \nAssert.GreaterOrEqual \nGreaterOrEqual \nAssert.Less \nLess \nAssert.Less \nLess \nAssert.Less \nLess \nAssert.LessOrEqual \nLessOrEqual \nAssert.LessOrEqual \nLessOrEqual \nAssert.LessOrEqual \nLessOrEqual \nAssert.NotNull \nNotNull \nAssert.NotNull \nNotNull \nAssert.NotNull \nNotNull \nAssert.Null \nNull \nAssert.Null \nNull \nAssert.Null \nNull","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreEqual","title":"Assert.AreEqual","content":"Assert.AreEqual \nAreEqual \n\n Verifies that two values are equal.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreEqual","title":"Assert.AreEqual","content":"Assert.AreEqual \nAreEqual \n\n Verifies that two values are equal.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreEqual","title":"Assert.AreEqual","content":"Assert.AreEqual \nAreEqual \n\n Verifies that two values are equal.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotEqual","title":"Assert.AreNotEqual","content":"Assert.AreNotEqual \nAreNotEqual \n\n Verifies that two values are not equal.\n If they are, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotEqual","title":"Assert.AreNotEqual","content":"Assert.AreNotEqual \nAreNotEqual \n\n Verifies that two values are not equal.\n If they are, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotEqual","title":"Assert.AreNotEqual","content":"Assert.AreNotEqual \nAreNotEqual \n\n Verifies that two values are not equal.\n If they are, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotSame","title":"Assert.AreNotSame","content":"Assert.AreNotSame \nAreNotSame \n\n Asserts that two objects do not refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotSame","title":"Assert.AreNotSame","content":"Assert.AreNotSame \nAreNotSame \n\n Asserts that two objects do not refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreNotSame","title":"Assert.AreNotSame","content":"Assert.AreNotSame \nAreNotSame \n\n Asserts that two objects do not refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreSame","title":"Assert.AreSame","content":"Assert.AreSame \nAreSame \n\n Asserts that two objects refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreSame","title":"Assert.AreSame","content":"Assert.AreSame \nAreSame \n\n Asserts that two objects refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#AreSame","title":"Assert.AreSame","content":"Assert.AreSame \nAreSame \n\n Asserts that two objects refer to the same object.\n If they are not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Contains","title":"Assert.Contains","content":"Assert.Contains \nContains \n\n Asserts that an object is contained in a list.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Contains","title":"Assert.Contains","content":"Assert.Contains \nContains \n\n Asserts that an object is contained in a list.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Contains","title":"Assert.Contains","content":"Assert.Contains \nContains \n\n Asserts that an object is contained in a list.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Greater","title":"Assert.Greater","content":"Assert.Greater \nGreater \n\n Verifies that the first value is greater than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Greater","title":"Assert.Greater","content":"Assert.Greater \nGreater \n\n Verifies that the first value is greater than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Greater","title":"Assert.Greater","content":"Assert.Greater \nGreater \n\n Verifies that the first value is greater than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#GreaterOrEqual","title":"Assert.GreaterOrEqual","content":"Assert.GreaterOrEqual \nGreaterOrEqual \n\n Verifies that the first value is greater than or equal to than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#GreaterOrEqual","title":"Assert.GreaterOrEqual","content":"Assert.GreaterOrEqual \nGreaterOrEqual \n\n Verifies that the first value is greater than or equal to than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#GreaterOrEqual","title":"Assert.GreaterOrEqual","content":"Assert.GreaterOrEqual \nGreaterOrEqual \n\n Verifies that the first value is greater than or equal to than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Less","title":"Assert.Less","content":"Assert.Less \nLess \n\n Verifies that the first value is less than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Less","title":"Assert.Less","content":"Assert.Less \nLess \n\n Verifies that the first value is less than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Less","title":"Assert.Less","content":"Assert.Less \nLess \n\n Verifies that the first value is less than the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#LessOrEqual","title":"Assert.LessOrEqual","content":"Assert.LessOrEqual \nLessOrEqual \n\n Verifies that the first value is less than or equal to the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#LessOrEqual","title":"Assert.LessOrEqual","content":"Assert.LessOrEqual \nLessOrEqual \n\n Verifies that the first value is less than or equal to the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#LessOrEqual","title":"Assert.LessOrEqual","content":"Assert.LessOrEqual \nLessOrEqual \n\n Verifies that the first value is less than or equal to the second value.\n If it is not, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#NotNull","title":"Assert.NotNull","content":"Assert.NotNull \nNotNull \n\n Verifies that the object that is passed in is not equal to \u0027null\u0027.\n If the object is \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#NotNull","title":"Assert.NotNull","content":"Assert.NotNull \nNotNull \n\n Verifies that the object that is passed in is not equal to \u0027null\u0027.\n If the object is \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#NotNull","title":"Assert.NotNull","content":"Assert.NotNull \nNotNull \n\n Verifies that the object that is passed in is not equal to \u0027null\u0027.\n If the object is \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Null","title":"Assert.Null","content":"Assert.Null \nNull \n\n Verifies that the object that is passed in is equal to \u0027null\u0027.\n If the object is not \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Null","title":"Assert.Null","content":"Assert.Null \nNull \n\n Verifies that the object that is passed in is equal to \u0027null\u0027.\n If the object is not \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-assert.html#Null","title":"Assert.Null","content":"Assert.Null \nNull \n\n Verifies that the object that is passed in is equal to \u0027null\u0027.\n If the object is not \u0027null\u0027, then an NUnit.Framework.AssertException is thrown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html","title":"Equality\u003C\u0027T\u003E","content":"Equality\u003C\u0027T\u003E \n \nEquality\u003C\u0027T\u003E.IsEqualTo \nIsEqualTo \nEquality\u003C\u0027T\u003E.IsNotEqualTo \nIsNotEqualTo \nEquality\u003C\u0027T\u003E.Reference \nReference \nEquality\u003C\u0027T\u003E.StructuralC \nStructuralC \nEquality\u003C\u0027T\u003E.Structural \nStructural","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html#IsEqualTo","title":"Equality\u003C\u0027T\u003E.IsEqualTo","content":"Equality\u003C\u0027T\u003E.IsEqualTo \nIsEqualTo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html#IsNotEqualTo","title":"Equality\u003C\u0027T\u003E.IsNotEqualTo","content":"Equality\u003C\u0027T\u003E.IsNotEqualTo \nIsNotEqualTo \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html#Reference","title":"Equality\u003C\u0027T\u003E.Reference","content":"Equality\u003C\u0027T\u003E.Reference \nReference \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html#StructuralC","title":"Equality\u003C\u0027T\u003E.StructuralC","content":"Equality\u003C\u0027T\u003E.StructuralC \nStructuralC \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunit-equality-1.html#Structural","title":"Equality\u003C\u0027T\u003E.Structural","content":"Equality\u003C\u0027T\u003E.Structural \nStructural \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html","title":"TopLevelOperators","content":"TopLevelOperators \n \nTopLevelOperators.shouldEqual \nshouldEqual \nTopLevelOperators.shouldNotEqual \nshouldNotEqual \nTopLevelOperators.shouldContain \nshouldContain \nTopLevelOperators.shouldBeEmpty \nshouldBeEmpty \nTopLevelOperators.shouldNotContain \nshouldNotContain \nTopLevelOperators.shouldBeSmallerThan \nshouldBeSmallerThan \nTopLevelOperators.shouldBeGreaterThan \nshouldBeGreaterThan \nTopLevelOperators.shouldFail \nshouldFail \nTopLevelOperators.shouldContainText \nshouldContainText \nTopLevelOperators.shouldNotContainText \nshouldNotContainText \nTopLevelOperators.shouldHaveLength \nshouldHaveLength","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldEqual","title":"TopLevelOperators.shouldEqual","content":"TopLevelOperators.shouldEqual \nshouldEqual \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldNotEqual","title":"TopLevelOperators.shouldNotEqual","content":"TopLevelOperators.shouldNotEqual \nshouldNotEqual \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldContain","title":"TopLevelOperators.shouldContain","content":"TopLevelOperators.shouldContain \nshouldContain \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldBeEmpty","title":"TopLevelOperators.shouldBeEmpty","content":"TopLevelOperators.shouldBeEmpty \nshouldBeEmpty \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldNotContain","title":"TopLevelOperators.shouldNotContain","content":"TopLevelOperators.shouldNotContain \nshouldNotContain \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldBeSmallerThan","title":"TopLevelOperators.shouldBeSmallerThan","content":"TopLevelOperators.shouldBeSmallerThan \nshouldBeSmallerThan \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldBeGreaterThan","title":"TopLevelOperators.shouldBeGreaterThan","content":"TopLevelOperators.shouldBeGreaterThan \nshouldBeGreaterThan \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldFail","title":"TopLevelOperators.shouldFail","content":"TopLevelOperators.shouldFail \nshouldFail \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldContainText","title":"TopLevelOperators.shouldContainText","content":"TopLevelOperators.shouldContainText \nshouldContainText \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldNotContainText","title":"TopLevelOperators.shouldNotContainText","content":"TopLevelOperators.shouldNotContainText \nshouldNotContainText \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitreference/fsunittyped-topleveloperators.html#shouldHaveLength","title":"TopLevelOperators.shouldHaveLength","content":"TopLevelOperators.shouldHaveLength \nshouldHaveLength \n","headings":[],"type":"apiDocs"},{"uri":"https://fsprojects.github.io/FsUnitExpecto.html","title":"Expecto\r\n","content":"Expecto\r\n\r\n  \r\n  \r\n    \r\n      The Expecto library can be installed from NuGet:\r\n      PM\u003E Install-Package Expecto\r\n    \r\n  \r\n  \r\n\r\nExpecto.Flip has a similar syntax to FsUnit.\r\nExpecto is not part of FsUnit.\r\nSyntax\r\nWith Expecto.Flip you can write your unit tests like this:\r\nopen Expecto.Flip.Expect\r\n\r\nOne object equals or does not equal another:\r\n1 |\u0026gt; equal \u0026quot;1 is equal to 1.\u0026quot; 1\r\n1 |\u0026gt; notEqual  \u0026quot;1 is not equal to 2.\u0026quot; 2\r\n\r\nOne comparable value greater or smaller than another:\r\n(11, 10) |\u0026gt; isGreaterThan \u0026quot;11 is greater than 10.\u0026quot;\r\n(10, 11) |\u0026gt; isLessThan \u0026quot;10 is less than 11.\u0026quot;\r\n\r\n\u0026amp; more operators:\r\ntrue |\u0026gt; isTrue \u0026quot;Value is true.\u0026quot;\r\nfalse |\u0026gt; isFalse \u0026quot;Value is false.\u0026quot;\r\n\r\n\u0026quot;\u0026quot; |\u0026gt; isEmpty\r\n\u0026quot;Foobar\u0026quot; |\u0026gt; isNotEmpty \u0026quot;Value is not empty.\u0026quot;\r\nNone |\u0026gt; isNone \u0026quot;Value is None.\u0026quot;\r\n\r\n{1 .. 10} |\u0026gt; contains \u0026quot;Seq 1 to 10 contains 4.\u0026quot; 4\r\n\r\nAll operators are listed here: Expecto.Flip.Expect\r\n","headings":["Expecto","Syntax"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitFsUnitTyped.html","title":"What is FsUnitTyped?\r\n","content":"What is FsUnitTyped?\r\nFsUnitTyped is a statically typed set of FsUnit operators that makes\r\nunit-testing with FsUnit even more safe and enjoyable (available only for NUnit and xUnit).\r\nNo more untyped constraints and tests like\r\n1 |\u0026gt; should equal \u0026quot;1\u0026quot;\r\n\r\nFsUnitTyped from NuGet\r\nFsUnit.Typed is part of FsUnit package and can be installed from NuGet.\r\nSyntax\r\nWith FsUnitTyped, you can write unit tests like this:\r\nopen FsUnitTyped\r\n\r\nOne object equals or does not equal another:\r\n1 |\u0026gt; shouldEqual 1\r\n1 |\u0026gt; shouldNotEqual 2\r\n\r\nOne comparable value greater or smaller than another:\r\n11 |\u0026gt; shouldBeGreaterThan 10\r\n10 |\u0026gt; shouldBeSmallerThan 11\r\n\r\nA string contains specified substring:\r\n\u0026quot;ships\u0026quot; |\u0026gt; shouldContainText \u0026quot;hip\u0026quot;\r\n\r\nA List, Seq, or Array instance contains, does not contain a value or empty:\r\n[1] |\u0026gt; shouldContain 1\r\n[] |\u0026gt; shouldNotContain 1\r\n[] |\u0026gt; shouldBeEmpty\r\n\r\nA List or Array instance has a certain length:\r\n[|1;2;3;4|] |\u0026gt; shouldHaveLength 4\r\n\r\nA function should throw a certain type of exception:\r\n(fun _ -\u0026gt; failwith \u0026quot;BOOM!\u0026quot;) |\u0026gt; shouldFail\u0026lt;System.Exception\u0026gt;\r\n\r\nA function should fail\r\nshouldFail (fun _ -\u0026gt; 5/0 |\u0026gt; ignore)\r\n\r\n","headings":["What is FsUnitTyped?","FsUnitTyped from NuGet","Syntax"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitindex.html","title":"What is FsUnit?\r\n","content":"What is FsUnit?\r\nFsUnit is a set of libraries that makes unit-testing with F# more enjoyable. It adds a special syntax to your favorite .NET testing framework.\r\nFsUnit currently supports NUnit, xUnit, and MsTest.\r\nThe goals of FsUnit are:\r\n\r\nto make unit-testing feel more at home in F# , i.e., more functional.\r\nto leverage existing test frameworks while at the same time adapting them to the F# language in new ways.\r\n\r\nNuGet packages are available for each of the supported testing frameworks:\r\n\r\n - NUnit\r\n - xUnit\r\n - MsTest\r\n\r\nSyntax\r\nWith FsUnit, you can write unit tests like this:\r\nopen NUnit.Framework\r\nopen FsUnit\r\n\r\nOne object equals or does not equal another:\r\n1 |\u0026gt; should equal 1\r\n1 |\u0026gt; should not\u0026#39; (equal 2)\r\n\r\nOne sequence equals or does not equal another:\r\nseq { 1; 2; 3 } |\u0026gt; should equalSeq (seq { 1; 2; 3 })\r\nseq { 1 } |\u0026gt; should not\u0026#39; (equalSeq (seq { 1; 2}))\r\n\r\nOne collection is equivalent or is not equivalent to another (order doesn\u0027t matter):\r\n[2;4;6] |\u0026gt; should equivalent [4;6;2]\r\n[2;4;6] |\u0026gt; should not\u0026#39; (equivalent [4;8;2])\r\n\r\nOne numeric object equals or does not equal another, with a specified tolerance:\r\n10.1 |\u0026gt; should (equalWithin 0.1) 10.11\r\n10.1 |\u0026gt; should not\u0026#39; ((equalWithin 0.001) 10.11)\r\n\r\nA string does or does not start with or end with a specified substring:\r\n\u0026quot;ships\u0026quot; |\u0026gt; should startWith \u0026quot;sh\u0026quot;\r\n\u0026quot;ships\u0026quot; |\u0026gt; should not\u0026#39; (startWith \u0026quot;ss\u0026quot;)\r\n\u0026quot;ships\u0026quot; |\u0026gt; should endWith \u0026quot;ps\u0026quot;\r\n\u0026quot;ships\u0026quot; |\u0026gt; should not\u0026#39; (endWith \u0026quot;ss\u0026quot;)\r\n\u0026quot;ships\u0026quot; |\u0026gt; should haveSubstring \u0026quot;hip\u0026quot;\r\n\u0026quot;ships\u0026quot; |\u0026gt; should not\u0026#39; (haveSubstring \u0026quot;pip\u0026quot;)\r\n\r\nA List, Seq, or Array instance contains or does not contain a value:\r\n[1] |\u0026gt; should contain 1\r\n[] |\u0026gt; should not\u0026#39; (contain 1)\r\n\r\nA List or Array instance has a certain length:\r\nanArray |\u0026gt; should haveLength 4\r\n\r\nA Collection instance has a certain count:\r\naCollection |\u0026gt; should haveCount 4\r\n\r\nA function should throw a certain type of exception:\r\n(fun () -\u0026gt; failwith \u0026quot;BOOM!\u0026quot; |\u0026gt; ignore) |\u0026gt; should throw typeof\u0026lt;System.Exception\u0026gt;\r\n(fun () -\u0026gt; failwith \u0026quot;BOOM!\u0026quot; |\u0026gt; ignore) |\u0026gt; should (throwWithMessage \u0026quot;BOOM!\u0026quot;) typeof\u0026lt;System.Exception\u0026gt;\r\n\r\nA function should fail\r\nshouldFail (fun () -\u0026gt; 5/0 |\u0026gt; ignore)\r\n\r\nA number of assertions can be created using the be keyword:\r\ntrue |\u0026gt; should be True\r\nfalse |\u0026gt; should not\u0026#39; (be True)\r\n\r\n\u0026quot;\u0026quot; |\u0026gt; should be EmptyString\r\n\u0026quot;\u0026quot; |\u0026gt; should be NullOrEmptyString\r\n\r\nnull |\u0026gt; should be NullOrEmptyString\r\nnull |\u0026gt; should be Null\r\nnull |\u0026gt; should be null\r\n\r\nanObj |\u0026gt; should not\u0026#39; (be Null)\r\nanObj |\u0026gt; should not\u0026#39; (be null)\r\nanObj |\u0026gt; should be (sameAs anObj)\r\nanObj |\u0026gt; should not\u0026#39; (be sameAs otherObj)\r\n\r\n11 |\u0026gt; should be (greaterThan 10)\r\n9 |\u0026gt; should not\u0026#39; (be greaterThan 10)\r\n11 |\u0026gt; should be (greaterThanOrEqualTo 10)\r\n9 |\u0026gt; should not\u0026#39; (be greaterThanOrEqualTo 10)\r\n10 |\u0026gt; should be (lessThan 11)\r\n10 |\u0026gt; should not\u0026#39; (be lessThan 9)\r\n10.0 |\u0026gt; should be (lessThanOrEqualTo 10.1)\r\n10 |\u0026gt; should not\u0026#39; (be lessThanOrEqualTo 9)\r\n\r\n0.0 |\u0026gt; should be ofExactType\u0026lt;float\u0026gt;\r\n1 |\u0026gt; should not\u0026#39; (be ofExactType\u0026lt;obj\u0026gt;)\r\n\r\n[] |\u0026gt; should be Empty\r\n[1] |\u0026gt; should not\u0026#39; (be Empty)\r\n\r\n\u0026quot;test\u0026quot; |\u0026gt; should be instanceOfType\u0026lt;string\u0026gt;\r\n\u0026quot;test\u0026quot; |\u0026gt; should not\u0026#39; (be instanceOfType\u0026lt;int\u0026gt;)\r\n\r\n2.0 |\u0026gt; should not\u0026#39; (be NaN)\r\n\r\n[1;2;3] |\u0026gt; should be unique\r\n\r\n[1;2;3] |\u0026gt; should be ascending\r\n[1;3;2] |\u0026gt; should not\u0026#39; (be ascending)\r\n[3;2;1] |\u0026gt; should be descending\r\n[3;1;2] |\u0026gt; should not\u0026#39; (be descending)\r\n\r\n[1..10] |\u0026gt; should be (supersetOf [3;6;9])\r\n[1..10] |\u0026gt; should not\u0026#39; (be supersetOf [5;11;21])\r\n\r\n[3;6;9] |\u0026gt; should be (subsetOf [1..10])\r\n[5;11;21] |\u0026gt; should not\u0026#39; (be subsetOf [1..10])\r\n\r\nThe ofCase operator allows you to check the case of a union.\r\nSupplying an expression that will result in a non-union type as well as supplying a non-union type as value argument will result in an exception detailing which parameter is wrong. Note that the actual value of the case is NOT checked, e.g. using \u0026lt;@ MyCase 5 @\u0026gt; as expression and (MyCase 10) as parameter will succeed. It is possible to check for more than one case by using a tuple of union cases.\r\ntype TestUnion = First | Second of int | Third of string\r\n\r\nFirst |\u0026gt; should be (ofCase\u0026lt;@ First @\u0026gt;)\r\nFirst |\u0026gt; should be (ofCase\u0026lt;@ First, Second @\u0026gt;) // checks if on the cases matches the given case\r\nSecond 5 |\u0026gt; should be (ofCase\u0026lt;@ Second 10 @\u0026gt;) // note, the actual value is not checked!\r\nFirst |\u0026gt; should not\u0026#39; (be ofCase\u0026lt;@ Second 5 @\u0026gt;)\r\n5 |\u0026gt; should be (ofCase\u0026lt;@ Second 5 @\u0026gt;) // will throw an exception\r\nSecond 5 |\u0026gt; should be (ofCase\u0026lt;@ int @\u0026gt;) // will throw an exception\r\n\r\nTest Projects Targeting Higher F# Runtimes\r\nIf you build your test project with a target F# runtime greater than the targeted runtime of the FsUnit assembly, you may find FsUnit operators failing at runtime, in which case you need to add a binding redirect to the App.config file.\r\n\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;utf-8\u0026quot; ?\u0026gt;\r\n\u0026lt;configuration\u0026gt;\r\n  \u0026lt;runtime\u0026gt;\r\n    \u0026lt;assemblyBinding xmlns=\u0026quot;urn:schemas-microsoft-com:asm.v1\u0026quot;\u0026gt;\r\n      \u0026lt;dependentAssembly\u0026gt;\r\n        \u0026lt;assemblyIdentity name=\u0026quot;FSharp.Core\u0026quot; publicKeyToken=\u0026quot;b03f5f7f11d50a3a\u0026quot; culture=\u0026quot;neutral\u0026quot; /\u0026gt;\r\n        \u0026lt;bindingRedirect oldVersion=\u0026quot;0.0.0.0-999.999.999.999\u0026quot; newVersion=\u0026quot;4.4.0.0\u0026quot; /\u0026gt;\r\n      \u0026lt;/dependentAssembly\u0026gt;\r\n    \u0026lt;/assemblyBinding\u0026gt;\r\n  \u0026lt;/runtime\u0026gt;\r\n\u0026lt;/configuration\u0026gt;\r\n\r\nContributing\r\nThe project is hosted on GitHub where you can report issues, fork\r\nthe project and submit pull requests. If you\u0027re adding a new public API, please also\r\nconsider adding samples that can be turned into a documentation. You might\r\nalso want to read the library design notes to understand how it works.\r\n","headings":["What is FsUnit?","Syntax","Test Projects Targeting Higher F# Runtimes","Contributing"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitMsTest.html","title":"FsUnit for MsTest\r\n","content":"FsUnit for MsTest\r\n\r\n  \r\n  \r\n    \r\n      The FsUnit library for MsTest can be installed from NuGet:\r\n      PM\u003E Install-Package Fs30Unit.MsTest\r\n      Sample FsUnit tests for MsTest can be installed from NuGet:\r\n      PM\u003E Install-Package Fs30Unit.MsTest.Sample\r\n    \r\n  \r\n  \r\n\r\nEuler - Problem 1\r\nmodule \u0060\u0060Project Euler - Problem 1\u0060\u0060 =\r\n    open Microsoft.VisualStudio.TestTools.UnitTesting\r\n    open FsUnit.MsTest\r\n\r\n    let GetSumOfMultiplesOf3And5 max =\r\n        seq{3..max-1} |\u0026gt; Seq.fold(fun acc number -\u0026gt;\r\n                            (if (number % 3 = 0 || number % 5 = 0) then\r\n                                acc \u002B number else acc)) 0\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060When getting sum of multiples of 3 and 5 to a max number of 10 it should return a sum of 23\u0060\u0060 () =\r\n        GetSumOfMultiplesOf3And5(10) |\u0026gt; should equal 23\r\n\r\nLightBulb\r\nmodule \u0060\u0060LightBulb Tests\u0060\u0060 =\r\n    open Microsoft.VisualStudio.TestTools.UnitTesting\r\n    open FsUnit.MsTest\r\n\r\n    type LightBulb(state) =\r\n        member x.On = state\r\n        override x.ToString() =\r\n            match x.On with\r\n            | true  -\u0026gt; \u0026quot;On\u0026quot;\r\n            | false -\u0026gt; \u0026quot;Off\u0026quot;\r\n\r\n    [\u0026lt;TestClass\u0026gt;]\r\n    type \u0060\u0060Given a LightBulb that has had its state set to true\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(true)\r\n\r\n        [\u0026lt;TestMethod\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers true.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be True\r\n\r\n        [\u0026lt;TestMethod\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;On\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;On\u0026quot;\r\n\r\n    [\u0026lt;TestClass\u0026gt;]\r\n    type \u0060\u0060Given a LightBulb that has had its state set to false\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(false)\r\n\r\n        [\u0026lt;TestMethod\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers false.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be False\r\n\r\n        [\u0026lt;TestMethod\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;Off\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;Off\u0026quot;\r\n\r\nBowlingGame\r\nThanks to Keith Nicholas and Julian from hubFS for this example!\r\nmodule \u0060\u0060BowlingGame A game of bowling\u0060\u0060 =\r\n    open Microsoft.VisualStudio.TestTools.UnitTesting\r\n    open FsUnit.MsTest\r\n\r\n    let (|EndOfGame|IncompleteStrike|Strike|Normal|Other|) (l, frame) =\r\n        match l with\r\n        | _ when frame = 11            -\u0026gt; EndOfGame(0)\r\n        | [10;s]                       -\u0026gt; IncompleteStrike(10\u002Bs\u002Bs)\r\n        | 10::s::n::tail               -\u0026gt; Strike(10\u002Bs\u002Bn, s::n::tail)\r\n        |  f::s::n::tail when f\u002Bs = 10 -\u0026gt; Normal(f\u002Bs\u002Bn,  n::tail)\r\n        |  f::s::n::tail               -\u0026gt; Normal(f\u002Bs,    n::tail)\r\n        | ls                           -\u0026gt; Other(List.fold (\u002B) 0 ls)\r\n\r\n    let scoreBowls bowls =\r\n        let rec scoreBowls\u0026#39; frame l current_score =\r\n            let nextframe = scoreBowls\u0026#39; (frame\u002B1)\r\n            match (l, frame) with\r\n            | EndOfGame(score)        -\u0026gt; current_score \u002B score\r\n            | IncompleteStrike(score) -\u0026gt; current_score \u002B score\r\n            | Strike(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Normal(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Other(score)            -\u0026gt; current_score \u002B score\r\n        scoreBowls\u0026#39; 1 bowls 0\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with simple scores should get the expected score.\u0060\u0060 () =\r\n        scoreBowls [1;2;3] |\u0026gt; should equal 6\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with a spare should get the expected score (spare).\u0060\u0060 () =\r\n        scoreBowls [2;8;1] |\u0026gt; should equal 12\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with a strike should get the expected score (strike).\u0060\u0060 () =\r\n        scoreBowls [10;1;2] |\u0026gt; should equal 16\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060that is perfect should get a score of 300.\u0060\u0060() =\r\n        scoreBowls [for i in 1..18 -\u0026gt; 10] |\u0026gt; should equal 300\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with spares in the last frame should get the expected score (spare in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [2;8;1]) |\u0026gt; should equal 11\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with a strike in the last frame should get the expected score (strike in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [10;10;1]) |\u0026gt; should equal 21\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060with double strikes should add the score of the first strike to the score of the second.\u0060\u0060 () =\r\n        scoreBowls [10;10;1] |\u0026gt; should equal 33\r\n\r\n    [\u0026lt;TestMethod\u0026gt;]\r\n    let \u0060\u0060that looks like an average bowler\u0026#39;s game should get the expected score (example game).\u0060\u0060 () =\r\n        scoreBowls [1;4;4;5;6;4;5;5;10;0;1;7;3;6;4;10;2;8;6] |\u0026gt; should equal 133\r\n\r\n","headings":["FsUnit for MsTest","Euler - Problem 1","LightBulb","BowlingGame"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitNUnit.html","title":"FsUnit for NUnit\r\n","content":"FsUnit for NUnit\r\n\r\n  \r\n  \r\n    \r\n      The FsUnit library for NUnit can be installed from NuGet:\r\n      PM\u003E Install-Package FsUnit\r\n      Sample FsUnit tests for NUnit can be installed from NuGet:\r\n      PM\u003E Install-Package FsUnit.Sample\r\n    \r\n  \r\n  \r\n\r\nInitialization\r\nIf you reference FsUnit from NuGet and want to use pretty-printed F# value types in error messages, you have to register custom values formatters.\r\nSetUpFixture\r\nAdd following piece of code to your assembly to register formatter for namespace or entire assembly\r\nopen FsUnit\r\nopen NUnit.Framework\r\n\r\n[\u0026lt;SetUpFixture\u0026gt;]\r\ntype InitMsgUtils() =\r\n    inherit FSharpCustomMessageFormatter()\r\n\r\n\r\nThe OneTimeSetUp method in a SetUpFixture is executed once before any of the fixtures contained in its namespace.\r\nA SetUpFixture outside of any namespace provides SetUp and TearDown for the entire assembly.\r\n\r\nIn F# you can use namespace global to create InitMsgUtils outside of any namespace.\r\nSetUp\r\nAs an alternative solution you can initialize FSharpCustomMessageFormatter for single test fixture from your setup method:\r\nopen FsUnit\r\n\r\n[\u0026lt;TestFixture\u0026gt;]\r\ntype MyTests () =\r\n\r\n    [\u0026lt;SetUp\u0026gt;]\r\n    member __.setup () =\r\n        FSharpCustomMessageFormatter() |\u0026gt; ignore\r\n\r\nEuler - Problem 1\r\nmodule \u0060\u0060Project Euler - Problem 1\u0060\u0060 =\r\n    open NUnit.Framework\r\n    open FsUnit\r\n\r\n    let GetSumOfMultiplesOf3And5 max =\r\n        seq{3..max-1} |\u0026gt; Seq.fold(fun acc number -\u0026gt;\r\n                            (if (number % 3 = 0 || number % 5 = 0) then\r\n                                acc \u002B number else acc)) 0\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060When getting sum of multiples of 3 and 5 to a max number of 10 it should return a sum of 23\u0060\u0060 () =\r\n        GetSumOfMultiplesOf3And5(10) |\u0026gt; should equal 23\r\n\r\nLightBulb\r\nmodule \u0060\u0060LightBulb Tests\u0060\u0060 =\r\n    open NUnit.Framework\r\n    open FsUnit\r\n\r\n    type LightBulb(state) =\r\n        member x.On = state\r\n        override x.ToString() =\r\n            match x.On with\r\n            | true  -\u0026gt; \u0026quot;On\u0026quot;\r\n            | false -\u0026gt; \u0026quot;Off\u0026quot;\r\n\r\n    [\u0026lt;TestFixture\u0026gt;]\r\n    type \u0060\u0060Given a LightBulb that has had its state set to true\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(true)\r\n\r\n        [\u0026lt;Test\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers true.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be True\r\n\r\n        [\u0026lt;Test\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;On\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;On\u0026quot;\r\n\r\n    [\u0026lt;TestFixture\u0026gt;]\r\n    type \u0060\u0060Given a LightBulb that has had its state set to false\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(false)\r\n\r\n        [\u0026lt;Test\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers false.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be False\r\n\r\n        [\u0026lt;Test\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;Off\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;Off\u0026quot;\r\n\r\nBowlingGame\r\nThanks to Keith Nicholas and Julian from hubFS for this example!\r\nmodule \u0060\u0060BowlingGame A game of bowling\u0060\u0060 =\r\n    open NUnit.Framework\r\n    open FsUnit\r\n\r\n    let (|EndOfGame|IncompleteStrike|Strike|Normal|Other|) (l, frame) =\r\n        match l with\r\n        | _ when frame = 11            -\u0026gt; EndOfGame(0)\r\n        | [10;s]                       -\u0026gt; IncompleteStrike(10\u002Bs\u002Bs)\r\n        | 10::s::n::tail               -\u0026gt; Strike(10\u002Bs\u002Bn, s::n::tail)\r\n        |  f::s::n::tail when f\u002Bs = 10 -\u0026gt; Normal(f\u002Bs\u002Bn,  n::tail)\r\n        |  f::s::n::tail               -\u0026gt; Normal(f\u002Bs,    n::tail)\r\n        | ls                           -\u0026gt; Other(List.fold (\u002B) 0 ls)\r\n\r\n    let scoreBowls bowls =\r\n        let rec scoreBowls\u0026#39; frame l current_score =\r\n            let nextframe = scoreBowls\u0026#39; (frame\u002B1)\r\n            match (l, frame) with\r\n            | EndOfGame(score)        -\u0026gt; current_score \u002B score\r\n            | IncompleteStrike(score) -\u0026gt; current_score \u002B score\r\n            | Strike(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Normal(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Other(score)            -\u0026gt; current_score \u002B score\r\n        scoreBowls\u0026#39; 1 bowls 0\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with simple scores should get the expected score.\u0060\u0060 () =\r\n        scoreBowls [1;2;3] |\u0026gt; should equal 6\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with a spare should get the expected score (spare).\u0060\u0060 () =\r\n        scoreBowls [2;8;1] |\u0026gt; should equal 12\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with a strike should get the expected score (strike).\u0060\u0060 () =\r\n        scoreBowls [10;1;2] |\u0026gt; should equal 16\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060that is perfect should get a score of 300.\u0060\u0060() =\r\n        scoreBowls [for i in 1..18 -\u0026gt; 10] |\u0026gt; should equal 300\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with spares in the last frame should get the expected score (spare in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [2;8;1]) |\u0026gt; should equal 11\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with a strike in the last frame should get the expected score (strike in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [10;10;1]) |\u0026gt; should equal 21\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060with double strikes should add the score of the first strike to the score of the second.\u0060\u0060 () =\r\n        scoreBowls [10;10;1] |\u0026gt; should equal 33\r\n\r\n    [\u0026lt;Test\u0026gt;]\r\n    let \u0060\u0060that looks like an average bowler\u0026#39;s game should get the expected score (example game).\u0060\u0060 () =\r\n        scoreBowls [1;4;4;5;6;4;5;5;10;0;1;7;3;6;4;10;2;8;6] |\u0026gt; should equal 133\r\n\r\nNote: NUnit can also be utilized without specifying a type as in the examples for xUnit\r\n","headings":["FsUnit for NUnit","Initialization","Euler - Problem 1","LightBulb","BowlingGame"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitoperators.html","title":"Operators comparison across frameworks\r\n","content":"Operators comparison across frameworks\r\n\r\n\r\n\r\nOperator\r\nNUnit\r\nxUnit\r\nMSTest\r\n\r\n\r\n\r\n\r\nNull\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nEmpty\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nEmptyString\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nNullOrEmptyString\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nTrue\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nFalse\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nNaN\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nunique\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nshould\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nequal\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nequalSeq\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nequivalent\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nequalWithin\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\ncontain\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nhaveLength\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nhaveCount\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nbe\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nsameAs\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nthrow\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nthrowWithMessage\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\ngreaterThan\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\ngreaterThanOrEqualTo\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nlessThan\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nlessThanOrEqualTo\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nshouldFail\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nendWith\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nstartWith\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nhaveSubstring\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nofExactType\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\ninstanceOfType\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nchoice\r\n\u274C\r\n\u2714\r\n\u2714\r\n\r\n\r\nascending\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\ndescending\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nnot\u0027\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nmatchList\r\n\u274C\r\n\u2714\r\n\u2714\r\n\r\n\r\ninRange\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nofCase\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nsupersetOf\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\nsubsetOf\r\n\u2714\r\n\u2714\r\n\u2714\r\n\r\n\r\n\r\n\r\n","headings":["Operators comparison across frameworks"],"type":"content"},{"uri":"https://fsprojects.github.io/FsUnitxUnit.html","title":"FsUnit for xUnit\r\n","content":"FsUnit for xUnit\r\n\r\n  \r\n  \r\n    \r\n      The FsUnit library for xUnit can be installed from NuGet:\r\n      PM\u003E Install-Package FsUnit.xUnit\r\n      Sample FsUnit tests for xUnit can be installed from NuGet:\r\n      PM\u003E Install-Package FsUnit.xUnit.Sample\r\n    \r\n  \r\n  \r\n\r\nEuler - Problem 1\r\nmodule \u0060\u0060Project Euler - Problem 1\u0060\u0060 =\r\n    open Xunit\r\n    open FsUnit.Xunit\r\n\r\n    let GetSumOfMultiplesOf3And5 max =\r\n        seq{3..max-1} |\u0026gt; Seq.fold(fun acc number -\u0026gt;\r\n                            (if (number % 3 = 0 || number % 5 = 0) then\r\n                                acc \u002B number else acc)) 0\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060When getting sum of multiples of 3 and 5 to a max number of 10 it should return a sum of 23\u0060\u0060 () =\r\n        GetSumOfMultiplesOf3And5(10) |\u0026gt; should equal 23\r\n\r\nLightBulb\r\nmodule \u0060\u0060LightBulb Tests\u0060\u0060 =\r\n    open Xunit\r\n    open FsUnit.Xunit\r\n\r\n    type LightBulb(state) =\r\n        member x.On = state\r\n        override x.ToString() =\r\n            match x.On with\r\n            | true  -\u0026gt; \u0026quot;On\u0026quot;\r\n            | false -\u0026gt; \u0026quot;Off\u0026quot;\r\n\r\n    type \u0060\u0060Given a LightBulb that has had its state set to true\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(true)\r\n\r\n        [\u0026lt;Fact\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers true.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be True\r\n\r\n        [\u0026lt;Fact\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;On\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;On\u0026quot;\r\n\r\n    type \u0060\u0060Given a LightBulb that has had its state set to false\u0060\u0060 ()=\r\n        let lightBulb = new LightBulb(false)\r\n\r\n        [\u0026lt;Fact\u0026gt;] member x.\r\n         \u0060\u0060when I ask whether it is On it answers false.\u0060\u0060 ()=\r\n                lightBulb.On |\u0026gt; should be False\r\n\r\n        [\u0026lt;Fact\u0026gt;] member x.\r\n         \u0060\u0060when I convert it to a string it becomes \u0026quot;Off\u0026quot;.\u0060\u0060 ()=\r\n                string lightBulb |\u0026gt; should equal \u0026quot;Off\u0026quot;\r\n\r\nBowlingGame\r\nThanks to Keith Nicholas and Julian from hubFS for this example!\r\nmodule \u0060\u0060BowlingGame A game of bowling\u0060\u0060 =\r\n    open Xunit\r\n    open FsUnit.Xunit\r\n\r\n    let (|EndOfGame|IncompleteStrike|Strike|Normal|Other|) (l, frame) =\r\n        match l with\r\n        | _ when frame = 11            -\u0026gt; EndOfGame(0)\r\n        | [10;s]                       -\u0026gt; IncompleteStrike(10\u002Bs\u002Bs)\r\n        | 10::s::n::tail               -\u0026gt; Strike(10\u002Bs\u002Bn, s::n::tail)\r\n        |  f::s::n::tail when f\u002Bs = 10 -\u0026gt; Normal(f\u002Bs\u002Bn,  n::tail)\r\n        |  f::s::n::tail               -\u0026gt; Normal(f\u002Bs,    n::tail)\r\n        | ls                           -\u0026gt; Other(List.fold (\u002B) 0 ls)\r\n\r\n    let scoreBowls bowls =\r\n        let rec scoreBowls\u0026#39; frame l current_score =\r\n            let nextframe = scoreBowls\u0026#39; (frame\u002B1)\r\n            match (l, frame) with\r\n            | EndOfGame(score)        -\u0026gt; current_score \u002B score\r\n            | IncompleteStrike(score) -\u0026gt; current_score \u002B score\r\n            | Strike(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Normal(score, l)        -\u0026gt; nextframe l (current_score \u002B score)\r\n            | Other(score)            -\u0026gt; current_score \u002B score\r\n        scoreBowls\u0026#39; 1 bowls 0\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with simple scores should get the expected score.\u0060\u0060 () =\r\n        scoreBowls [1;2;3] |\u0026gt; should equal 6\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with a spare should get the expected score (spare).\u0060\u0060 () =\r\n        scoreBowls [2;8;1] |\u0026gt; should equal 12\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with a strike should get the expected score (strike).\u0060\u0060 () =\r\n        scoreBowls [10;1;2] |\u0026gt; should equal 16\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060that is perfect should get a score of 300.\u0060\u0060() =\r\n        scoreBowls [for i in 1..18 -\u0026gt; 10] |\u0026gt; should equal 300\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with spares in the last frame should get the expected score (spare in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [2;8;1]) |\u0026gt; should equal 11\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with a strike in the last frame should get the expected score (strike in last frame).\u0060\u0060 () =\r\n        scoreBowls ([for i in 1..18 -\u0026gt; 0] @ [10;10;1]) |\u0026gt; should equal 21\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060with double strikes should add the score of the first strike to the score of the second.\u0060\u0060 () =\r\n        scoreBowls [10;10;1] |\u0026gt; should equal 33\r\n\r\n    [\u0026lt;Fact\u0026gt;]\r\n    let \u0060\u0060that looks like an average bowler\u0026#39;s game should get the expected score (example game).\u0060\u0060 () =\r\n        scoreBowls [1;4;4;5;6;4;5;5;10;0;1;7;3;6;4;10;2;8;6] |\u0026gt; should equal 133\r\n\r\n","headings":["FsUnit for xUnit","Euler - Problem 1","LightBulb","BowlingGame"],"type":"content"}]